Until version 1.4:
    Recursive input buffer refilling
        Buffer position should be stored in nss_term_t
        tty_write_raw should just read a portion of data to buffer,
            possibly discarding some data, not invoking term_write
Until version 1.5
    Reports
    XTPOPSGR, XTPUSHSGR, Save restore private mode
    Special colors
    Option to disable blinking
    Colored glyphs
    Cursor is not always damaged
        Only noticed in vimpc
        Old cursor bar is is left behind
    Dynamically allocated string buffer
        for huge OSC/DSC strings
    Refactor frame timings
        use separate timings for erase,scroll,resize
        just wait for screen update completion?
            do not redraw if erase/scroll/resize reached
                or probably just wait until nothing read
                from master in main loop
            draw if max frame time reached
More:
    Refactor config:
        some options are per-instance
            needs to be updated on reload
        some are global
    Probably remove short options support (v2)
        breaks all cmd options
        simplifies things
        makes it possible to be (somewhat) compatible with XTerm
        they are unused now
        Use single dash for all options
    Selections
        How should selections interact with DECLRMM?
    SL,SR
        If the current cursor position is outside of the current scroll region it does nothing???
    Window operations
    Implement named values for options instead of numeric
    Make key modifiers T,A,M configurable
    Query modifiers by names, instead of using predefined?
    User-prefered charset
    Support new color syntax
    Bell
    Proper combining characters support
    Wayland (v2)
    Implement proper daemon mode
    Make X resources names more or less correspond to Xterm/rxvt-unicode?
    SIXEL
    DEC Locator
===================
Render
    [ ] Colored glyphs
    [ ] Double width/height, Down-Line-Loadable fonts
    [ ] Add options to select width of ambigues characters
    [ ] Combining characters support
    [ ] Add fallback fonts support back (optionally enabled)
    [x] XRender
        [?] Slow scrolling of full-color images (with small font in chafa)
        [ ] Rendering refactoring:
            -Use multiple separate buffers for cells parts:
                1. Background
                2. Lines
                3. Glyphs
            -Merge adjacent cells with same color while pushing
            -Then sort and draw, groupping by color
Term
    (?) Geometry should be measured in characters
    Capability restriction
        Now this works like in xterm
    Printing with attributes and also support specifing print command
    Is private mode 1044 semantics correct?
    Is reset correctly implemented?
    Private modes
        4 -- DECSCLM
        8 -- DECARM (When ported to wayland)
        14 -- Cursor blinking XORing
        35 -- font shifting functions
        44 -- margin bell [bell]
        80 -- DECSDM [SIXEL]
        1001 -- Hightlight mouse tracking [mouse]
        1005 -- UTF-8 mouse [mouse]
        1015 -- URXVT mouse [mouse]
        1042 -- bell is window urgency [bell]
        1043 -- raise on bell [bell]
        1039 -- Alt sends escape [input]
        1040 -- terminfo/termcap function key mode [input]
        1070 -- Use private resgisters [SIXEL]
        8452 -- Sixel scrolling leaves cursor to the right of graphics [SIXEL]
        These need further invastigation:
            srm_BUTTON1_MOVE_POINT = 2001
            srm_BUTTON2_MOVE_POINT = 2002
            srm_DBUTTON3_DELETE = 2003
            srm_PASTE_QUOTE = 2005
            srm_PASTE_LITERAL_NL = 2006
    DEC Locator [mouse]
        CSI ? 53 n
        CSI ? 55 n
        CSI ? 56 n
        CSI Pt ; Pl ; Pb ; Pr ' w -- DECEFR
        CSI Ps ; Pu ' z -- DECELR
        CSI Pm ' { -- DECSLE
        CSI Ps ' | -- DECRQLP ->  CSI Pe ; Pb ; Pr ; Pc ; Pp & w
    Hightlight tracking
        CSI Ps ; Ps ; Ps ; Ps ; Ps T
    Window operations
        CSI 1 ; 0 ; 0 t -- Deiconify
        CSI 2 ; 0 ; 0 t -- Iconfiy
        CSI 3 ; Px ; Py t -- Mode to x ; y
        CSI 4 ; Ph ; Pw t -- Resize (in pixels), defaults are current, zero are fullscreen
        CSI 5 ; 0 ; 0 t -- Raise
        CSI 6 ; 0 ; 0 t -- Lower
        CSI 7 ; 0 ; 0 t -- Refresh
        CSI 8 ; Px ; Py t -- Resize (in chars), defaults are current, zero are fullscreen
        CSI 9 ; 0 ; 0 t -- Restore maximized
        CSI 9 ; 1 ; 0 t -- Maximize
        CSI 9 ; 2 ; 0 t -- Maximize vertically
        CSI 9 ; 3 ; 0 t -- Maximize horizontally
        CSI 10 ; 0 ; 0 t -- Undo fullscreen
        CSI 10 ; 1 ; 0 t -- Set fullscreen
        CSI 10 ; 2 ; 0 t -- Toggle fullscreen
        CSI 11 ; 0 ; 0 t -- Report state (CSI 1 t/ CSI 2 t -- mapped/unmapped)
        CSI 13 ; 0 ; 0 t -- Report position (as uint16_t, two's complement) -> CSI 3 ; Px ; Py t
        CSI 13 ; 2 ; 0 t -- Report text area position -> CSI 3 ; Px ; Py t
        CSI 14 ; 0 ; 0 t -- Report text area size in pixels -> CSI 4 ; Ph ; Pw t
        CSI 14 ; 2 ; 0 t -- Report window size in pixels -> CSI 4 ; Ph ; Pw t
        CSI 15 ; 0 ; 0 t -- Report screen size in pixels -> CSI 5 ; Ph ; Pw t
        CSI 16 ; 0 ; 0 t -- Report cell size in pixels -> CSI 6 ; Ph ; Pw t
        CSI 18 ; 0 ; 0 t -- Report text area size in chars -> CSI 8 ; Ph ; Pw t
        CSI 19 ; 0 ; 0 t -- Report screen size in chars -> CSI 9 ; Ph ; Pw t
        CSI Ps t -- Ps > 23,Resize window to Ps lines
        CSI Ps $ | -- DECSCPP
        CSI Ps * | -- DECSNLS
        CSI > Ps p -- Pointer mode
        DCS + Q Pt ST -- XTGETXRES -> DCS Ps + R Pt ST
        OSC I Pt ST -- Set icon XPM file
        OSC 13 Pt ST -- Set mouse foreground color
        OSC 13 Pt ST -- Set mouse background color
        OSC 3 ; Pt ST -- Set X property
    Reports
        CSI Pt ; Pl ; Pb ; Pr # | -- XTREPORTSGR
        CSI Ps # y -- XTCHECKSUM
        CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y -- DECRQCRA -> DCS"%"PRId32"!~%04X"ST
        DCS $ q m ST -- DECRQSS -> SGR
        DCS $ q " p ST -- DECRQSS -> DECSCL
        DCS $ q SP q ST -- DECRQSS -> DECSCUSR
        DCS $ q " q ST -- DECRQSS -> DECSCA
        DCS $ q r ST -- DECRQSS -> DECSTBM
        DCS $ q s ST -- DECRQSS -> DECSLRM
        DCS $ q t ST -- DECRQSS -> DECSLPP
        DCS $ q $ | ST -- DECRQSS -> DECSCPP
        DCS $ q * | ST -- DECRQSS -> DECSNLS
        DCS 1 $ t Pt ST -- DECRSPS -> DECCIR
        DCS 2 $ t Pt ST -- DECRSPS -> DECTABSR
        CSI Ps $ p -- RQM
        CSI ? Ps $ p -- DECRQM
        CSI 0 # w -- DECRQPSR -> Error
        CSI 1 # w -- DECRQPSR -> DECCIR
        CSI 2 # w -- DECRQPSR -> DECTABSR
    SIXEL
        CSI ? Pi ; Pa; Pv S -- Set/request graphics attributes (Pi = 1, 2; Pa = 1, 2, 3, 4)
        DSC Pa ; Pb ; Ph q Ps..Ps ST -- Send sixel image
    Other sequences
        CSI Pm # p, CSI Pm # { -- XTPUSHSGR
        CSI # q, CSI # } -- XTPOPSGR
        CSI ? Pm r -- Restore DEC private modes
        CSI ? s -- Save DEC private modes
        DCS Pf ; Pc ; Pe ; Pw ; Ps ; Pt; Ph ; Px f Pt ST -- DECDLD
        DCS + p Pt ST -- XTSETTCAP
        DCS + q Pt ST -- XTGETTCAP
        DCS Ps ; Ps | Pt ST -- DECUDK
        OSC 5 ; Pt ST -- Set special color
        OSC 6 ; Pc ; Pt ST -- Enable/disable special color
        OSC 50 ; Pt ST -- Set font
        OSC 105 ; Pt ST -- Reset special color
        OSC 106 ; Pc ; Pf ST -- Enable/disable special color
        OSC 13 Pt ST -- Set mouse background color
        OSC 14 Pt ST -- Set mouse foreground color
        OSC 113 Pt ST -- Reset color mouse foreground color
        OSC 114 Pt ST -- Reset color mouse background color
    Bell
        CSI Ps SP t -- DECSWBV
        CSI Ps SP u -- DECSMBV
