#!/bin/sh

use_ppoll=0
use_x11shm=1
use_boxdrawing=1
use_precompose=1
use_posix_shm=0
use_clang=0
prefix=/usr/local
name=nsst
backend=x11shm
vars='CFLAGS = -O2 -flto'
version=20100

# Test some features by trying compiling snippets
dotest() { printf "$1" | cc -x c - -lrt 2>&1 >/dev/null && rm -f a.out; }

shmtest="#define _POSIX_C_SOURCE 200809L\n#include <sys/mman.h>\nint main(){shm_open(0,0,0);}\n"
ppolltest="#define _GNU_SOURCE\n#include <poll.h>\nint main(){ppoll(0,0,0,0);}\n"

# Test if system supports POSIX shared memory
dotest "$shmtest" && use_posix_shm=1
# Test if system supports ppoll
dotest "$ppolltest" && use_ppoll=1

help() {
cat <<END
Usage: configure [options]
    --name=NAME             binary name [$name]
    --prefix=DIR            installation prefix [$prefix]
    --mandir=DIR            man install directory [$prefix/share/man]
    --bindir=DIR            binary install directory [$prefix/bin]
    --enable-ppoll          enable ppoll in main loop for better timing [set if available]
    --disable-ppoll         disable ppoll in main loop, use poll instead
    --enable-boxdrawing     enable built-in box drawing characters [set]
    --disable-boxdrawing    disable built-in box drawing characters
    --enable-precompose     enable unicode combining characters precomposition [set]
    --disable-precompose    disable unicode combining characters precomposition
    --enable-posix-shm      enable posix shared memory functions usage
    --disable-posix-shm     disble posix shared memory functions usa
    --backend=<targ>        Rendering backend [x11shm]/x11xrender
    --use-clang             Configure to compile with clang/lld
END
}

IFS=''
nl='\
'

for i; do
    case "$i" in
    --enable-ppoll)
        use_ppoll=1 ;;
    --disable-ppoll)
        use_ppoll=0 ;;
    --enable-boxdrawing)
        use_boxdrawing=1 ;;
    --disable-boxdrawing)
        use_boxdrawing=0 ;;
    --enable-precompose)
        use_precompose=1 ;;
    --disable-precompose)
        use_precompose=0 ;;
    --enable-posix-shm)
        use_posix_shm=1 ;;
    --disable-posix-shm)
        use_posix_shm=0 ;;
    --use-clang)
        use_clang=1 ;;
    --backend=*)
        backend="${i#--backend=}" ;;
    --name=*)
        name="${i#--name=}" ;;
    --bindir=*)
        bindir="${i#--bindir=}" ;;
    --mandir=*)
        mandir="${i#--mandir=}" ;;
    --mandir=*)
        sharedir="${i#--sharedir=}" ;;
    --prefix=*)
        prefix="${i#--prefix=}" ;;
    [A-Za-z_]*=*)
        vars="$vars$nl$i" ;;
    *)
        help
        exit 1 ;;
    esac
done

if [ "$use_clang" = 1 ]; then
    vars="${vars}${nl}CCLD=clang -fuse-ld=/usr/bin/ld.lld${nl}CC=clang"
else
    vars="${vars}${nl}"'CCLD=$(CC)'
fi

[ x = x"$bindir" ] && bindir=${prefix}/bin
[ x = x"$mandir" ] && mandir=${prefix}/share/man
[ x = x"$sharedir" ] && sharedir=${prefix}/share

deps="fontconfig freetype2 xkbcommon"
objs="nsst.o util.o font.o term.o tty.o line.o config.o mouse.o input.o nrcs.o"

case "$backend" in
x11shm)
    objs="$objs window-x11.o render-x11shm.o image.o"
    deps="$deps xcb xcb-xkb xcb-shm xkbcommon-x11"
    use_x11shm=1
    ;;
x11xrender)
    objs="$objs window-x11.o render-x11xrender.o"
    deps="$deps xcb xcb-xkb xcb-render xkbcommon-x11"
    use_x11shm=0
    ;;
*)
    echo "\tUnknown backend: '$backend'"
    help
    exit 1
    ;;
esac

if [ x"$use_boxdrawing" = x1 ]; then
    objs="$objs boxdraw.o"
fi

sed < "./feature.h.in" > "./feature.h" \
    -e "s:@USE_PPOLL@:$use_ppoll:g" \
    -e "s:@USE_BOXDRAWING@:$use_boxdrawing:g" \
    -e "s:@USE_X11SHM@:$use_x11shm:g" \
    -e "s:@USE_PRECOMPOSE@:$use_precompose:g" \
    -e "s:@USE_POSIX_SHM@:$use_posix_shm:g" \
    -e "s:@VERSION@:$version:g"

sed < "./Makefile.in" > "./Makefile" \
    -e "s:@NAME@:$name:" \
    -e "s:@PREFIX@:$prefix:" \
    -e "s:@BINDIR@:$bindir:" \
    -e "s:@MANDIR@:$mandir:" \
    -e "s:@SHAREDIR@:$sharedir:" \
    -e "s:@DEPS@:$deps:" \
    -e "s:@OBJECTS@:$objs:" \
    -e "s:@VARS@:$vars:"

cat <<END
    name..................... $name
    prefix................... $prefix
    bindir................... $bindir
    mandir................... $mandir
    sharedir................. $sharedir
    backend.................. $backend
    boxdrawing............... $use_boxdrawing
    precompose............... $use_precompose
    ppoll.................... $use_ppoll
    posix shm................ $use_posix_shm
    force clang+lld.......... $use_clang

    Do "make && make install" to compile and install nsst
END
